<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAADAAAAAwAAAAQAAAAFAAAABgAAAAYAAAAHAAAABwAA
        AAcAAAAHAAAABwAAAAcAAAAGAAAABgAAAAUAAAAEAAAABAAAAAMAAAACAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAgAAAAMAAAAFAAAABgAAAAgAAAAJAAAACwAAAA0AAAAPAAAAEQAA
        ABIAAAATAAAAFAAAABQAAAAUAAAAFAAAABMAAAASAAAAEAAAAA8AAAANAAAACwAAAAkAAAAIAAAABgAA
        AAUAAAADAAAAAgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAMAAAAFAAAABwAAAAkAAAAMAAAADwAAABMAAAAXAAAAGwAA
        AB8AAAAjAAAAJwAAACoAAAAtAAAALwAAADAAAAAwAAAALwAAAC0AAAAqAAAAJwAAACMAAAAfAAAAGwAA
        ABcAAAATAAAADwAAAAwAAAAJAAAABwAAAAUAAAADAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAADAAAABQAAAAgAAAALAAAADwAAABQAAAAZAAAAIAAA
        ACcAAAAvAAAANwAAAEAAAABHAAAATwAAAFUAAABaAAAAXQAAAF8AAABeAAAAXQAAAFoAAABVAAAATgAA
        AEcAAAA/AAAANwAAAC8AAAAnAAAAIAAAABkAAAAUAAAADwAAAAsAAAAIAAAABQAAAAMAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAUAAAAHAAAACgAAAA8AAAAVAAAAHAAA
        ACQAAAAvAAAAOgAAAEcAAABUAAAAYQAAAG4AAAB7AAAAhQAAAI4AAACVAAAAmgAAAJwAAACcAAAAmgAA
        AJUAAACOAAAAhQAAAHoAAABuAAAAYQAAAFQAAABHAAAAOgAAAC4AAAAkAAAAGwAAABUAAAAPAAAACgAA
        AAcAAAAFAAAAAwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAABQAAAAgAAAAMAAAAEgAA
        ABgAAAAiAAAALQAAADsAAABKAAAAWwAAAG4AAACAAAAAkgAAAKIAAACxBw4SwQ0kLM8RMT7ZEzpL3xhC
        VeMbR1rkG0Zb4xhAWeAUPFXbEzlN0xAvOsUECQymAAAAkgAAAIAAAABtAAAAWwAAAEoAAAA6AAAALQAA
        ACIAAAAZAAAAEgAAAAwAAAAIAAAABQAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAFAAAACAAA
        AAwAAAASAAAAGQAAACMAAAAwAAAAQAAAAFIAAABnAAAAfQAAAJMBAQGpDScwyipVZOZokKH4l7jE/rXK
        0P7O2tv+2uDc/t3f2P7Y2dD+0NLJ/snOyv7Izsr+xM3O/qq9yP5yor/7I1Ft3QgWG7IAAACTAAAAfQAA
        AGcAAABSAAAAQAAAADAAAAAkAAAAGQAAABIAAAAMAAAACAAAAAUAAAADAAAAAQAAAAAAAAAAAAAAAgAA
        AAQAAAAGAAAACgAAABAAAAAXAAAAIAAAAC0AAAA9AAAAUAAAAGYAAAB+AwgKmxxJVc9yq7f2v9rb/+vs
        5f7p6uL/5+jg/+bm3v7j49r/29zT/8/Qxf68vLH/qKid/5eakP6Ah4D/YWVd/1JUTf5kZ1//kJaS/4Op
        vP44bH7hCh4kqAAAAH4AAABmAAAAUAAAAD0AAAAtAAAAIAAAABYAAAAPAAAACgAAAAYAAAAEAAAAAgAA
        AAAAAAAAAAAAAgAAAAQAAAAHAAAADAAAABIAAAAZAAAAJQAAADMAAABFAAAAWgMJC3kgTVjAhLjB9t/s
        6P7x8uz/7/Hq/+jp4f7l5t3/4+Tb/+Hi2f7e39X/2NnP/8zNwv62t6v/mpuO/2p5fP4ybpT/IXiq/yF+
        s/4feK3/IWOQ/1Fre//Bysb+qc7S/jdsedIFDxJ+AAAAWgAAAEQAAAAzAAAAJQAAABkAAAASAAAACwAA
        AAcAAAAEAAAAAgAAAAAAAAAAAAAAAgAAAAQAAAAHAAAADAAAABIAAAAZAAAAJAAAADMAAABFDy01hH6w
        ufLj7Oj+8vPs//Dx6v7v8On/7e/n/+nq4v7i49r/4eLY/9/g1v7d3dP/2dnP/9LSx/7IyLz/n66u/yF9
        u/4yq9X/LZ3F/xxmkf4WSmv/GVNy/x5vnf9llKn+3+Lc/+rv6f9+tL/xDy02hAAAAEQAAAAzAAAAJQAA
        ABkAAAASAAAACwAAAAcAAAAEAAAAAgAAAAAAAAAAAAAAAgAAAAQAAAAGAAAACgAAAA8AAAAXAAAAIAAA
        AC0AAAE+ZqKw2vP07v7y8+3+8PHq/uzt5f7o6eH+5+jf/uTl3P7i49r+3+DW/t3e0/7b29H+2NnO/tbW
        y/7S08f+r7u6/jed0v5C1fD+NKa9/il/kf4dapP+Gmaa/hA2WP4sd5/+wcbB/uLm4f7v8ev+oM/X+A4q
        M2kAAAAtAAAAIAAAABcAAAAQAAAACgAAAAYAAAAEAAAAAgAAAAAAAAAAAAAAAQAAAAMAAAAFAAAACAAA
        AAwAAAASAAAAGQAAACQWOEJ40OTi/vLz6//x8ur+7/Hp/+7w6P7s7eX/5+ff/+Pk2/7h4tj/3t7U/9na
        z/7W18v/1NXJ/9LTxv7S08b/0dHF/8vNwf6nyMj/gbW6/2KapP5KgZf/OX6q/yFgjP8gcZr+mKmd/9HU
        yf/f493+6u3n/3a1w+ICBwgrAAAAGQAAABIAAAAMAAAACAAAAAUAAAADAAAAAQAAAAAAAAAAAAAAAAAA
        AAEAAAADAAAABQAAAAgAAAAMAAAAEgMGByB9rbXl8vPr/vDx6f7v8Oj+7u/m/u7v5v7t7uX+6+zj/ubn
        3f7d3tP+2drP/tXVyv7P0MP+wsW6/qavrP6fqqn+sLex/srLvv7R0sX+1NXJ/tfYzf7b3NL+5OXb/tvi
        2v5Zjq/+PYGW/qizpP7JzLz+2dzU/tTj4f4gUV52AAAAEgAAAAwAAAAIAAAABQAAAAMAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAwAAAAUAAAAHAAAAChtDTWvf6ub/8fLq/+/w6P/u7+b+7e3k/+zs
        4v7r6+H/6enf/+fo3P7i49f/0dLF/4mVl/43WnH/LHOO/06PoP5UkaP/PGWD/ydagP5WboD/t721/9fX
        y/7m59v/6uvg/+vs4f/n6d/+hbvN/zyUp/+Npp/+uryq/8jNxf90q7ncBQoLDwAAAAcAAAAFAAAAAwAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAADCBMWBWKXoq/z8+z/8PHp/+/w
        5//u7uX+7O3j/+vr4f7p6d//5ubb/+Pi1f7e3tD/WWhz/ytYd/6cx8f/u8Gv/62wnv6kqJb/o6iX/7O8
        rP6Bq7f/JUty/6qzsP7m5tr/6ene/+rq3//p6d/+6ene/7bR1/9Dor3+VJKa/3iIhP+ks7D+NnOKcwwa
        IgQAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGz5GAoK9
        xrby8+z+8PHp/u/w5/7u7+b+7e3k/uzt4/7q6+H+5+jc/uLj1v6qurb+HjNJ/qOxqf6UmIb+jJB//pOX
        hf6Xm4n+k5iF/omOff6YnYv+kamu/jVYd/7k5df+6uvh/u3u5f7u7+b+7u/n/u7u5v7h5uL+gb/V/jah
        wP40eoz+MnGcrTJoizc7aIMNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGy6ynjy9O3/8fLq//Dx6P/v8Of+7u/m/+3u5f7s7OP/5+jd/9LVxv6ZtbH/bXRr/6mt
        mv69wa//xsq5/8vPvv7Kz77/v8u//7nHuv60wLH/r7ak/3eSkv7j5Nf/6uvg/+3t4//u7uT+7u7l/+7u
        5v/u7+b+7+/m/9bf4f9hsdTxNKrR+Di51/88sdvmRoCvBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHS+zhK+3+Lv8vPr//Hx6f/v8Of+2tzQ/8jLvP7o6N3/5OXZ/8HG
        tP6Qk4P/sLSi/8HGtP7Jzrz/ztLB/9DVw/7S1sX/0tfI/9HXx/7S2Mj/0dfH/8XNvf7DyLb/6erf/+7u
        5P/u7+b+7+/m/+/w5//w8Oj+8fHp//Pz7P+IxtOTSYvEFj2U0kNRsN8XAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACEw82C8/Ts/vHy6v7u7+b+ub6r/r/E
        s/7S1sn+z9HF/pqfjP6hpZX+s7el/sLGtP7Lz73+z9PB/tHVw/7S18b+1NjI/tXayv7W28v+19vL/tTa
        y/7R18j+297P/vDw5/7w8Of+8PDn/vDx6P7x8en+8vPr/uHs6P50wdE8AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABosb4+5e7p/vP0
        7f/c39T+n6aS/8jLvP7b3M//zM/A/7W4p/6pq5v/uLyr/8HFs/7HzLn/ys+8/8zRvv7O08H/0dXD/9LX
        xv7U2cj/1tvK/9jczP7V3c//2t/P//Dw6P/w8Oj+8fHp//Hy6v/y8uv+8/Tt/57R27IAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAlM7cL7jT07+rsJ7+xsq5/+rr4f7r6+L/3+DU/8TJuP66vqz/s7el/7u/rf7AxLL/w8i1/8XL
        t/7HzLn/yc67/8vQvf7O0sD/0dXD/9TZyP7X3c3/2+DR/+/w5//x8en+8fLq//Lz6//t8uz+qtjgrIXF
        1wsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALfAr6PEybb+3uHX/vLz6/7y8ur+7e7l/r/Esv6ytqP+q6+c/rO4
        pf64var+u8Ct/r3Cr/6+w7D+v8Wx/sHHs/7Eyrb+yM26/szSv/7S2Mb+2d7P/vDx6P7y8uv+8/Ps/sji
        5NyZ0N1RAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALvBreC1vKn+pMXAgNHl5Oj09O3/8PHp/7K2
        o/6anor/mp6L/6mum/6wtKH/tLil/7S6pv61uqb/trun/7e8qP65v6v/vcSv/8HJtf7Jz7v/1NrI//Pz
        7P/z9O3+ptLZoonC0gcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4+fcOOzu5vzq7OP+tL6ujp3B
        wQ6l0NhjtsfAxJqfjf5rcGD/kpaD/5+lkv6lq5j/qbCd/6uyn/6qsZ7/pK6e/6Wtm/6stKD/srij/7a+
        q/6+xbD/ytG++rzb22if0t1Ph8HQBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/v7+Af7+/gX+/v4g/v7+Gf7+/hL+/v4FAAAAAAAAAAD+/v4D/v7+Cf7+/gQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAO/v7wP///8P////CP7+/gMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8E+Pj4BAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApKSkBLi4uAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP//4Af//wAA//gAAB//
        AAD/gAAAAf8AAP4AAAAAfwAA+AAAAAAfAADgAAAAAAcAAMAAAAAAAwAAgAAAAAABAACAAAAAAAEAAIAA
        AAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAwAAAAAADAADgAAAAAAcAAPgAAAAAHwAA/gAAAAAf
        AAD/AAAAAA8AAP8AAAAAHwAA/4AAAAD/AAD/gAAAAf8AAP/AAAAB/wAA/+AAAAf/AAD/4AAAD/8AAP/A
        AAAf/wAA/8AAAH//AAD/4AAAf/8AAP/wAAB//wAA//4AAD//AAD//gAAP/8AAP/8AAAf/wAA//wAAB//
        AAD//AAAH/8AAP/8AAAf/wAA//4AAD//AAD//4AA//8AAP//gAD//wAA///AAP//AAD//+Bj//8AAP//
        8P///wAA///5////AAD///n///8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>